//      *********    DO NOT MODIFY THIS FILE     *********
//      This file is regenerated by a design tool. Making
//      changes to this file can cause errors.
namespace Expression.Blend.SampleData.GameMenuSampleData
{
    using System;
    using System.ComponentModel;

    // To significantly reduce the sample data footprint in your production application, you can set
    // the DISABLE_SAMPLE_DATA conditional compilation constant and disable sample data at runtime.
#if DISABLE_SAMPLE_DATA
    internal class GameMenuSampleData { }
#else

    public class GameMenuSampleData : INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void OnPropertyChanged(string propertyName)
        {
            if (this.PropertyChanged != null)
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        public GameMenuSampleData()
        {
            try
            {
                Uri resourceUri = new Uri("/ShooterGame;component/SampleData/GameMenuSampleData/GameMenuSampleData.xaml", UriKind.RelativeOrAbsolute);
                System.Windows.Application.LoadComponent(this, resourceUri);
            }
            catch
            {
            }
        }

        private Resolutions _Resolutions = new Resolutions();

        public Resolutions Resolutions
        {
            get
            {
                return this._Resolutions;
            }
        }
    }

    public class ResolutionsItem : INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void OnPropertyChanged(string propertyName)
        {
            if (this.PropertyChanged != null)
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        public string _Value = string.Empty;

        public string Value
        {
            get
            {
                return this._Value;
            }
            set
            {
                if (this._Value != value)
                {
                    this._Value = value;
                    OnPropertyChanged("Value");
                }
            }
        }

        public override string ToString()
        {
            return Value;
        }
    }

    public class Resolutions : System.Collections.ObjectModel.ObservableCollection<ResolutionsItem>
    {
    }
#endif
}
